upstream front {
    server front:3000;
}
upstream back {
    server back:8081;
}

server {
    listen      80;
    listen [::]:80;
    server_name antfarm.ml www.antfarm.ml;

    location ^~ /ping {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

        proxy_pass       http://front;
    }

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }

    location ^~ /.well-known {
        allow all;
        root  /data/letsencrypt/;
    }
}

# server {

#     listen 80;

#     server_name antfarm.ml www.antfarm.ml;

#     location / {
#         proxy_pass http://front;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header Host $host;
#         proxy_redirect off;
#     }

#     location /api/ {
#         proxy_pass http://back;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header Host $host;
#         proxy_redirect off;
#     }

#     location ^~ /.well-known {
#         allow all;
#         root  /data/letsencrypt/;
#     }

#     # listen 443 ssl; # managed by Certbot
#     # ssl_certificate /etc/letsencrypt/live/antfarm.ml/fullchain.pem; # managed by Certbot
#     # ssl_certificate_key /etc/letsencrypt/live/antfarm.ml/privkey.pem; # managed by Certbot
#     # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#     # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
# }

# server {
#     if ($host = www.antfarm.ml) {
#         return 301 https://$host$request_uri;
#     }

#     if ($host = antfarm.ml) {
#         return 301 https://$host$request_uri;
#     }
#     listen 80;
#     server_name antfarm.ml www.antfarm.ml;
#     return 404;
# }